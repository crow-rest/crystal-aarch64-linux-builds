FROM alpine:latest as builder
ARG TARGETARCH

WORKDIR /build

RUN apk update && apk add alpine-sdk autoconf libffi-dev clang14

# Apk packages for Crystal
RUN apk update && apk add \
      automake \
      git \
      libbsd-dev \
      libedit-dev \
      libevent-dev \
      gmp-dev \
      pcre-dev \
      openssl-dev \
      libtool \
      libxml2-dev \
      yaml-dev \
      lld \
      llvm14 \
      llvm14-dev\
      zlib-dev \
      gc-dev

# Add llvm path to path
ENV PATH /usr/lib/llvm14/bin:$PATH

ENV cc /usr/bin/clang-14
RUN ln -sf $cc /usr/bin/cc

# GC
RUN git clone https://github.com/ivmai/bdwgc.git
WORKDIR /build/bdwgc
RUN git checkout $(git describe --tags --abbrev=0)
RUN git clone https://github.com/ivmai/libatomic_ops.git
RUN autoreconf -vif
RUN ./configure --enable-static --disable-shared
RUN make -j
RUN make install
WORKDIR /build

# Crystal deps
RUN git clone https://github.com/crystal-lang/crystal.git
WORKDIR /build/crystal
RUN git checkout $(git describe --tags --abbrev=0)
RUN make deps

# Link and Build Crystal
# This cmd comes from the build github actions job and is slightly modified.
COPY crystal-$TARGETARCH.o crystal.o
RUN cc crystal.o -o crystal -rdynamic -L/usr/bin/../lib/crystal ./src/llvm/ext/llvm_ext.o `"/usr/lib/llvm14/bin/llvm-config" --libs --system-libs --ldflags 2> /dev/null` -lstdc++ -lpcre -lm -lgc -lpthread -levent -lrt -lpthread -ldl -lffi
RUN cp crystal /usr/local/bin
RUN FLAGS=--verbose make install release=1
WORKDIR /build

# Build shards
RUN git clone https://github.com/crystal-lang/shards.git
WORKDIR /build/shards
RUN git checkout $(git describe --tags --abbrev=0)
RUN git clone --recursive https://github.com/crystal-lang/crystal-molinillo.git lib/molinillo
RUN cd lib/molinillo && git checkout $(git describe --tags --abbrev=0)
RUN FLAGS=--verbose make bin/shards release=1
RUN FLAGS=--verbose make install release=1

# Move to img
FROM alpine:latest

RUN apk add --no-cache \
      tzdata \
      gcc \
      clang14 \
      binutils \
      pkgconf \
      openssl-dev \
      libxml2-dev \
      yaml-dev \
      gmp-dev \
      git \
      make \
      pcre-dev \
      libevent-dev \
      zlib-dev \
      gc-dev \
      libc-dev

ENV cc /usr/bin/clang-14
RUN ln -sf $cc /usr/bin/cc

COPY --from=builder /usr/local/bin/crystal /usr/local/bin/crystal
COPY --from=builder /usr/local/share/crystal/src /usr/local/share/crystal/src
COPY --from=builder /usr/local/share/licenses/crystal/LICENSE /usr/local/share/licenses/crystal/LICENSE

COPY --from=builder /usr/local/bin/shards /usr/local/bin/shards

WORKDIR /app

CMD [ "shards", "run", "--release" ]
