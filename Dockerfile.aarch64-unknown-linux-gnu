FROM debian:stable-slim as builder

WORKDIR /build

RUN apt update && apt install -y build-essential curl wget lsb-release software-properties-common gnupg

# LLVM 14 required for Crystal
RUN wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && ./llvm.sh 14

# Apt packages for Crystal
RUN apt update && apt install -y \
      automake \
      git \
      libbsd-dev \
      libedit-dev \
      libevent-dev \
      libgmp-dev \
      libgmpxx4ldbl \
      libpcre3-dev \
      libssl-dev \
      libtool \
      libxml2-dev \
      libyaml-dev \
      lld \
      llvm-14 \
      llvm-14-dev\
      libz-dev \
      libgc-dev

ENV cc /usr/bin/clang-14
RUN ln -sf $cc /usr/bin/cc

# GC
RUN git clone https://github.com/ivmai/bdwgc.git
WORKDIR /build/bdwgc
RUN git checkout $(git describe --tags --abbrev=0)
RUN git clone https://github.com/ivmai/libatomic_ops.git
RUN autoreconf -vif
RUN ./configure --enable-static --disable-shared
RUN make -j
RUN make install
WORKDIR /build

# Crystal deps
RUN git clone https://github.com/crystal-lang/crystal.git
WORKDIR /build/crystal
RUN git checkout $(git describe --tags --abbrev=0)
RUN make deps

# Link and Build Crystal
# This cmd comes from the build github actions job and is slightly modified.
COPY crystal.o .
RUN cc crystal.o -o crystal -rdynamic -L/usr/bin/../lib/crystal ./src/llvm/ext/llvm_ext.o `"/usr/bin/llvm-config-14" --libs --system-libs --ldflags 2> /dev/null` -lstdc++ -lpcre -lm -lgc -lpthread -levent -lrt -lpthread -ldl -lffi
RUN cp crystal /usr/local/bin
RUN FLAGS=--verbose make install release=1
WORKDIR /build

# Build shards
RUN git clone https://github.com/crystal-lang/shards.git
WORKDIR /build/shards
RUN git checkout $(git describe --tags --abbrev=0)
RUN git clone --recursive https://github.com/crystal-lang/crystal-molinillo.git lib/molinillo
RUN cd lib/molinillo && git checkout $(git describe --tags --abbrev=0)
RUN FLAGS=--verbose make release=1
RUN FLAGS=--verbose make install release=1

# Move to img
FROM debian:stable-slim

RUN apt update && apt upgrade -y && apt install -y \
    curl \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

RUN curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
RUN echo "deb http://apt.llvm.org/bullseye/ llvm-toolchain-bullseye-14 main" >> /etc/apt/sources.list

RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
      tzdata \
      clang-14 \
      pkg-config \
      libssl-dev \
      libxml2-dev \
      libyaml-dev \
      libgmp-dev \
      git \
      make \
      libpcre3-dev \
      libevent-dev \
      libz-dev \
      llvm-14-dev \
      libgc-dev \
    && apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV cc /usr/bin/clang-14
RUN ln -s $cc /usr/bin/cc

COPY --from=builder /usr/local/bin/crystal /usr/local/bin/crystal
COPY --from=builder /usr/local/share/crystal/src /usr/local/share/crystal/src
COPY --from=builder /usr/local/share/licenses/crystal/LICENSE /usr/local/share/licenses/crystal/LICENSE

COPY --from=builder /usr/local/bin/shards /usr/local/bin/shards

WORKDIR /app

CMD [ "shards", "run", "--release" ]
