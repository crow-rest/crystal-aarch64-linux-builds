name: Build Crystal for aarch64 targets

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.set.outputs.should }}
      version: ${{ steps.set.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Latest crystal version (Remote)
        run: echo "CRYSTAL_LATEST=$(git ls-remote --tags https://github.com/crystal-lang/crystal.git | grep -o 'refs/tags/[0-9]*\.[0-9]*\.[0-9]*' | sort -r | head -n 1 | grep -o '[^\/]*$')" >> $GITHUB_ENV
      - name: Latest crystal version (Built)
        run: echo "CRYSTAL_BUILT_LATEST=$(curl -fsSL https://github.com/crow-rest/crystal-aarch64-linux-builds/releases/download/track/crystal-version)" >> $GITHUB_ENV
      - name: Set Output
        id: set
        run: |
          should=${{ (env.CRYSTAL_LATEST != env.CRYSTAL_BUILT_LATEST) || (github.event_name == 'pull_request') }} echo "should=${should^}" >> $GITHUB_OUTPUT
          echo "version=${{ env.CRYSTAL_LATEST }}" >> $GITHUB_OUTPUT
      - name: Print
        run: echo ${{ steps.set.outputs.should }}

  build:
    runs-on: ubuntu-latest
    needs: [ check ]
    if: ${{ needs.check.outputs.should-build }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache llvm
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: |
            llvm
          key: ${{ runner.os }}-llvm-14
      - name: Cache crystal
        uses: actions/cache@v3
        with:
          path: |
            crystal
            bdwgc
          key: ${{ runner.os }}-crystal-build-${{ needs.check.outputs.version }}
      - name: Install pkgs
        run: sudo apt update && sudo apt-get install -y libbsd-dev libedit-dev libevent-dev 
          libgmp-dev libgmpxx4ldbl libpcre3-dev libssl-dev libtool libxml2-dev libyaml-dev libz-dev
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1.6.1
        with:
          version: 14
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: Install crystal
        run: curl -fsSL https://crystal-lang.org/install.sh | sudo bash
      - name: Clone repos
        run: |
          git -C bdwgc fetch || git clone https://github.com/ivmai/bdwgc.git bdwgc
          git -C crystal fetch || git clone https://github.com/crystal-lang/crystal.git crystal
      - name: Make bdwgc latest tag
        working-directory: ./bdwgc
        run: git checkout $(git describe --tags --abbrev=0)
      - name: Get bdwgc deps
        working-directory: ./bdwgc
        run: git -C libatomic_ops pull origin master || git clone https://github.com/ivmai/libatomic_ops.git
      - name: Build and install bdwgc
        working-directory: ./bdwgc
        run: |
          [ -f Makefile ] && make clean
          autoreconf -vif
          ./configure --enable-static --disable-shared
          make -j
          make check
          sudo make install
      - name: Make crystal latest tag
        working-directory: ./crystal
        run: git checkout ${{ needs.check.outputs.version }}
      - name: Build crystal
        working-directory: ./crystal
        run: |
          make clean
          FLAGS=--verbose make crystal verbose=1
      - name: Build aarch64-unknown-linux-gnu object file
        working-directory: ./crystal
        run: ./bin/crystal build src/compiler/crystal.cr --cross-compile --target=aarch64-unknown-linux-gnu -D without_openssl -D without_zlib --verbose
      - name: Store aarch64-unknown-linux-gnu object file
        uses: actions/upload-artifact@v3
        with:
          name: obj-aarch64-unknown-linux-gnu
          path: crystal/crystal.o
      - name: Build aarch64-unknown-linux-musl object file
        working-directory: ./crystal
        run: ./bin/crystal build src/compiler/crystal.cr --cross-compile --target=aarch64-unknown-linux-musl -D without_openssl -D without_zlib --verbose
      - name: Store aarch64-unknown-linux-musl object file
        uses: actions/upload-artifact@v3
        with:
          name: obj-aarch64-unknown-linux-musl
          path: crystal/crystal.o

  crystal-builds:
    strategy:
      fail-fast: false
      matrix:
        target: [ aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl ]
    runs-on: ubuntu-latest
    needs: [ check, build ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crystal.o
        uses: actions/download-artifact@v3
        with:
          name: obj-${{ matrix.target }}
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.2.1
      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: ./Dockerfile.${{ matrix.target }}
          load: true
          tags: ghcr.io/crow-rest/crystal:${{ matrix.target }},ghcr.io/crow-rest/crystal:${{ matrix.target }}-${{ needs.check.outputs.version }}
          platforms: linux/arm64
      - name: Extract binary
        run: docker run --rm --mount type=bind,source=$(pwd),target=/app --pull=never ghcr.io/crow-rest/crystal:${{ matrix.target }} sh -c "cp /usr/local/bin/crystal /usr/local/bin/shards /app"
      - name: Push Image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker push ghcr.io/crow-rest/crystal:${{ matrix.target }}
          docker push ghcr.io/crow-rest/crystal:${{ matrix.target }}-${{ needs.check.outputs.version }}
      - name: Tar
        run: |
          tar -czvf ${{ matrix.target }}-crystal.tar.gz crystal
          tar -czvf ${{ matrix.target }}.tar.gz crystal shards
      - name: Hash
        run: |
          sha256sum ${{ matrix.target }}-crystal.tar.gz >> ${{ matrix.target }}-crystal.sha256
          sha256sum ${{ matrix.target }}.tar.gz >> ${{ matrix.target }}.sha256
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.target }}-crystal.tar.gz
            ${{ matrix.target }}-shards.tar.gz
            ${{ matrix.target }}.tar.gz
            ${{ matrix.target }}-crystal.sha256
            ${{ matrix.target }}-shards.sha256
            ${{ matrix.target }}.sha256
      - name: Release Artifact
        if: ${{ github.event_name != 'pull_request' }}
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: crystal-${{ needs.check.outputs.version }}
          release_name: crystal-${{ needs.check.outputs.version }}
          overwrite: true
          file_glob: true
          file: ${{ matrix.target }}*

  publish:
    runs-on: ubuntu-latest
    needs: [ check, build, crystal-builds ]
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
      - name: Make file
        run: echo ${{ needs.check.outputs.version }} > ./crystal-version
      - name: Set track
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: track
          release_name: track
          overwrite: true
          prerelease: true
          file: crystal-version
